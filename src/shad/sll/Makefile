# Makefile
#
# CELIA Tools / SLL Abstract Domain
#
# This file is part of the CELIA tool, released under LGPL license.
# Please read the COPYING file packaged in the distribution.

include Makefile.config

PREFIX = ../..

# C include and lib directories
INCDIR = $(PREFIX)/include
LIBDIR = $(PREFIX)/lib
BINDIR = $(PREFIX)/bin

SRCDIR = $(shell pwd)

#---------------------------------------
# Programs
#---------------------------------------

# Library creation
SHARED = $(CC) -shared

#---------------------------------------
# Flags
#---------------------------------------

# Use ICFLAGS to specify machine-independent compilation flags.
ICFLAGS = \
-I$(MPFR_PREFIX)/include \
-I$(GMP_PREFIX)/include \
-I$(CAML_PREFIX)/lib/ocaml \
-I$(CAMLIDL_PREFIX)/lib/ocaml \
-I$(MLGMPIDL_PREFIX)/include \
-I$(APRON_CCINC) \
-I$(APRON_OCINC) \
-I$(PREFIX)/utils \
-I$(PREFIX)/shad/shad \
-I$(PREFIX)/slad

# Caml
OCAMLINC = \
-I $(MLGMPIDL_PREFIX)/include \
-I $(APRON_OCINC)

#---------------------------------------
# Files
#---------------------------------------

ADOM_CCSOURCES = adom_print.c adom_transfer.c adom_closure.c adom_nary.c \
	adom_representation.c adom_predicate.c adom_resize.c

ADOM_CCINC = adom.h adom_internal.h adom_fun.h 

HGRAPH_CCSOURCES = $(subst adom,hgraph,$(ADOM_CCSOURCES))

HGRAPH_CCINC = $(subst adom,hgraph,$(ADOM_CCINC))

CCSOURCES = $(HGRAPH_CCSOURCES) 

CCINC = $(HGRAPH_CCINC) 

# trigers a whole recompilation
#DEPS = $(APRON_CCINC)/ap_abstract0.h

#---------------------------------------
# Rules
#---------------------------------------

root:
	@echo
	@echo "Please choose a target from:"
	@echo
	@echo " all                     : all C libraries"
	@echo " ml                      : OCaml library"
	@echo " allml                   : everything"
	@echo " install                 : to install what has been compiled"
	@echo " indent                  : to indent C sources"
	@echo " clean                   : remove objects"
	@echo " distclean               : clean & uninstall"
	@echo " mostyleclean            : remove objects & autogenerated"
	@echo " rebuild                 : rebuild autogenerated "
	@echo

all: libhgraph$(DEBUG).so libhgraph$(DEBUG).a
ifeq ($(DEBUG),_debug)
	ln -f -s libhgraph$(DEBUG).so libhgraph.so
endif

allml: ml

alltest: hgraphtest

clean:
	/bin/rm -f *.[ao] hgraphtest*
	/bin/rm -f *.?.tex *.log *.aux *.bbl *.blg *.toc *.dvi *.ps *.pstex*
	/bin/rm -fr *.cm[ioax] *.cmxa
	/bin/rm -fr *~ 

mostlyclean: clean
	/bin/rm -fr *_caml.c *.mli

#TODO: (un)install other dynlib also
install:
	$(INSTALLd) $(INCDIR) $(INCDIR)/shape $(LIBDIR) $(BINDIR)
	$(INSTALL) shape.h $(INCDIR)
	$(INSTALL) $(CCINC) $(INCDIR)/shape
	for i in libshape*.* libshape*_debug.* libshape_caml.* shape.idl; do \
		if test -f $$i; then $(INSTALL) $$i $(LIBDIR); fi; \
	done
	for i in shapetest?? shapetop?? shaperun??; do \
		if test -f $$i; then $(INSTALL) $$i $(BINDIR); fi; \
	done
	for i in shape.mli shape.cmi shape.cma shape.cmxa shape.a; do \
		if test -f $$i; then $(INSTALL) $$i $(LIBDIR); fi; \
	done

uninstall:
	/bin/rm -fr $(INCDIR)/shape
	/bin/rm -f $(BINDIR)/shapetest?? $(BINDIR)/shapetop?? $(BINDIR)/shaperun??
	/bin/rm -f $(LIBDIR)/libshape*.* $(LIBDIR)/libshape*_debug.* $(LIBDIR)/libshape_caml.a
	/bin/rm -f $(LIBDIR)/shape.mli $(LIBDIR)/shape.cmi $(LIBDIR)/shape.idl $(LIBDIR)/shape.cma $(LIBDIR)/shape.cmxa $(LIBDIR)/shape.a
	/bin/rm -f Makefile.depend

distclean: uninstall
	/bin/rm -f Makefile.depend

dist: Makefile COPYING README shape_doc.html sedscript_caml sedscript_c $(CCSOURCES) $(CCINC) shape.h shape_test.c shape.idl shape.mli shape.ml shape_caml.c
	(cd ..; tar zcvf shapes.tgz $(^:%=shapes/%))

indent: $(CCSOURCES) $(CCINC)
	for i in $(CCSOURCES) $(CCINC); do \
		echo "* indent $$i"; indent -bl -i2 -nut $$i; \
	done

#-----------------------------------
# C part
#-----------------------------------

APRON_LIBS = \
-lap2sh$(DEBUG) \
-lapron$(DEBUG) 

SHARED_LIBS = $(APRON_LIBS) \
	-lmpfr \
	-lgmp \
	-lm

LDFLAGS = -L$(GMP_PREFIX)/lib \
	-L$(MPFR_PREFIX)/lib \
	-L$(APRON_LIBPATH) \
	-L../../utils

LDLIBS = $(SHAPE_LIBS) $(DW_LIBS)
#Warning: do not put APRON_LIBS because already put in by frama-c


# hgraph_*
#
libhgraph.a: $(subst .c,.o,$(HGRAPH_CCSOURCES))
	$(AR) rcs $@ $^
	$(RANLIB) $@

libhgraph_debug.a: $(subst .c,_debug.o,$(HGRAPH_CCSOURCES))
	$(AR) rcs $@ $^
	$(RANLIB) $@

libhgraph.so: $(subst .c,.o,$(HGRAPH_CCSOURCES))
	$(SHARED) $(LDFLAGS) $(SHARED_LIBS) -o $@ $^ 

libhgraph_debug.so: $(subst .c,_debug.o,$(HGRAPH_CCSOURCES))
	$(SHARED) $(LDFLAGS) $(SHARED_LIBS) -o $@ $^ 

hgraphtest: libhgraph$(DEBUG).so hgraph_test$(DEBUG).o
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -o $@ hgraph_test$(DEBUG).o \
	$(LDFLAGS) \
	-lhgraph_debug $(SHARED_LIBS)

#---------------------------------------
# IMPLICIT RULES AND DEPENDENCIES
#---------------------------------------

.SUFFIXES: .c .h .a .o .so 

%_caml.o: %_caml.c $(CCINC) $(DEPS) lib%.a
	$(CC) $(CFLAGS) $(ICFLAGS) -c -o $@ $<

%.o: %.c $(CCINC) $(DEPS)
	$(CC) $(CFLAGS) $(ICFLAGS) -c -o $@ $<

%_debug.o: %.c $(CCINC) $(DEPS)
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -c -o $@ $<

.PRECIOUS: libhgraph%.a 


#-----------------------------------
# Caml part
#-----------------------------------

#---------------------------------------
# IDL rules
#---------------------------------------

#---------------------------------------
# ML generic rules
#---------------------------------------

#-----------------------------------
# DEPENDENCIES
#-----------------------------------
